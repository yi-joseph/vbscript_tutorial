# 1 LCase(String) 
# Diese Funktion wandelt einen String zu Lowercase um.
# Beispiel:
Dim Text : Text = "HIER IST EIN STRING"
LCase(Text)

# UCase(Text)
# Diese Funktion wandelt einen String zu Uppercase um.
# Beispiel:
Dim Text : Text = "hier ist ein string"
UCase(Text)

# 2 Len(String)
# Die Funktion gibt die Length von einem String zurück. 

# 3 Right(String, length_von_String)
# Die Funktion gibt einen String zurück, der von der rechten Seite des eingegebenen Strings an nach der Length geschrieben wird.
# Beispiel
Dim text : text = "Hallo!"
Right(text,2)
# Ausgabe: "o!"

# 4 InStrRev(string1, string2)
# Diese Funktion gibt die Position davon zurück, dass string2 in string1 zuerst auftritt. 
# Beispiel:
' Hier ist ein Beipielcode für die Funktion InStrRev(String1, String2)
' Ziel: 
' DateiNamen aus einem gegebenen Pfad exstrahieren und ausgeben

Dim string1, string2, positionsNummer, dateiName
string1 = "C:\Windows\Server\services\microsoft\word\meineDatei.txt"
string2 = "\"

positionsNummer = InStrRev(string1, string2)
MsgBox "Servus, hier ist die Positionsnummer von string1: " & positionsNummer

MsgBox "Der originale Pfad ist: " & string1

dateiName = Right(string1, Len(string1)-InStrRev(string1, string2))
MsgBox "Hier ist der Dateiname aus dem Pfad: " & dateiName

# 4 Left(string, length_vom_string) 
# Diese Funktion gibt den String zurück, der von der linken Seite an nach der Length geschrieben wurde
# Beispiel: 
dim text, ausgabe
text = "Hallo"
ausgabe = Left(text, 2)
MsgBox "Hier ist die Zurueckgabe des Strings: " & ausgabe
' "Ha" wird zurückgegeben.

# 5 Mid(string, start_position, length_vom_String)
# Die Funktion gibt den String zurück, der in dem gegebenen String von der start_position an nach dem length_vom_String geschrieben wurde
# Beispiel 
Dim text, ausgabe
text = "_Hallo Welt!"

' Überprüfen, ob "-" oder "_" am Anfang des String steht
If ((Left(text, 1) = "-") or (Left(text, 1) = "_")) then
	ausgabe = Mid(text, 2, Len(text))
' "Hallo Welt" soll ausgegeben werden
End If

' "_" vor dem Dateinamen soll entfernt werden.  
MsgBox "Hier ist der aufgegebene Text: " & ausgabe

# 6 Dateiendung löschen
' Hier ist Programm, dass die Dateiendung von einer Datei entfernt
 Dim dateiNameMitEndung, dateiName
 
 dateiNameMitEndung = "Bereichtshefte.pdf"
 MsgBox "Der originale Dateiname ist " & dateiNameMitEndung
 
 dateiName = Left(dateiNameMitEndung, (InstrRev(dateiNameMitEndung, ".") - 1))
 MsgBox "Hier ist der Dateiname ohne Dateiendung: " & dateiName
 MsgBox "Dateiendung wurde erfolgreich geloescht! "

# 7 Trim(string)
# Diese Funktion löscht die leeren Zeichnen eines Strings auf beiden Seiten
# Beispiel
Dim text, name
text = " Yi "
name = Trim(text)
' Hier ist Beispielcode für die Funktion Trim(String)
Dim text, name
text = " Yi "
MsgBox "Hier ist mein Name mit leeren Zeichen" & text & "!"

name = Trim(text)
MsgBox "Hier ist mein Name ohne leere Zeichen" & name & "!"

# 8 Exists()
# Diese Funktion überprüft, ob etwas schon existiert.
# Wenn ja, gibt die Funktion "true" oder "1" zurück

# 9 Value-Property 
# object.Value
# Dieses Property gibt einen Value oder einen String zurück.

# 10 Funktiongruppen von CreateObject("Scripting.FileSystemObject")
# CreateObject("Scripting.FileSystemObject") erzeugt ein Obejkt für Dateisystemoperationen
# Damit kann man Dateien kopieren/löschen, Ordner durchsuchen und Dateieigenschaften abrufen. 
# Dafür gibt es Funktionen, die ich mit Beispiel erkläre
Dim FilePath : FilePath = "C:\Windows\Microsoft\Word\meineDatei.pdf"
Dim dateiName, dateiEndung
Set fso = CreateObject("Scripting.FileSystemObject")
dateiName = fso.GetFileName(FilePath)
dateiEndung = fso.GetExtensionName(FilePath)
' Hier sind zwei Funktionen, die den Dateinamen und die Dateiendung auslesen. 
.GetFileName()
.GetExtensionName()

# 10 Replace(text, String1, String2)
# Diese Funktion gibt den Text zurück, indem String1 durch String 2 ersetzt wird
# Beispiel: 
' Hier ist ein Beispielcode für die Funktion Replace(text, string1, string2)

Dim text, string1, string2, ausgabe
text = "Berichtshefte_Yi_Miao.pdf"
string1 = "Yi_Miao"
string2 = "Miao_Yi"

MsgBox "Der originale Text ist: " & text

ausgabe = Replace(text, string1, string2)
MsgBox "Der geaenderte Text ist: " & ausgabe

# 11 Keyword: Nothing
# Dieses Keyword trennt eine Objekt-Variable von einem aktuellen Objekt. 
# Beispiel:
' Variable fso wird zu einem Objekt zugewiesen
Dim fso : Set fso = CreateObject("Scripting.FileSystemObject")
' Variable fso wird von dem Objekt getrennt. 
Set fso = Nothing

# 12 On Error Resume Next  
# Dieser Befehl führt die nächsten Zeilen weiter aus, wenn ein Fehler auftritt. 

# 13 Umlaute in sXML schreiben: 
Ä -> &#x00C4;
Ö -> &#x00D6;
Ü -> &#x00DC;
ä -> &#x00E4;
ö -> &#x00F6;
ü -> &#x00FC;
ß -> &#x00DF;
# Beispiel: 
' Öffentliche Dokumente
Register = Array("&#x00D6;ffentliche Dokumente", "Formelle Dokumente", "Berichtsheft", "Schulmaterialien")

# 14 Ubound(arrayName)
# Diese Funktion gibt die größte Indexnummer eines Arrays zurück.
# Beispiel
Dim wochentage : wochentage = array("Sun","Mon","Tue","Wed","Thu","Fri","Sat")
' Return 6
Ubound(wochentage) 

# 15 Lbound(arrayName)
# Diese Funktion gibt die gleinste Indexnummer eines Arrays zurück.
# Beispiel
Dim wochentage : wochentage = array("Sun","Mon","Tue","Wed","Thu","Fri","Sat")
' Return 0
Lbound(wochentage) 

# 16 Ubound(arrayName, 2)
# Diese Funktion gibt die größte Indexnummer von der zweiten Dimension des Arrays zurück. 
# Default ist Ubound(arrayName, 1)

# 17 Lbound(arrayName, 2)
# Diese Funktion gibt die kleinste Indexnummer von der zweiten Dimension des Arrays zurück.
# Default ist Lbound(arrayName, 1)


