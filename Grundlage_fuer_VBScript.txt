Grundlage für VBScript
Autor: Yi Miao 
Ort: Heidelberg

# 1
# VBScript ist eine interpretierte Script-Sprache.
# Es gibt keine Funktion für "print" wie Python oder "stdout::cout<< "Hello World" ::std:endl;" in C++.
# In VBScript kann man einfach als folgendes machen: 
# Erstens eine .vbs-Datei erstellen: 
# Hier benutze ich einfach den Editor Notapad++, also unter Console: 
n hello_world.vbs
# Jetzt kann man den Code einfach so schreiben: 
MsgBox "Hello World in VBScript"
# D.h. kann man nur mit dem Fenster wissen, ob die Script mit oder ohne Fehler läuft oder nicht. 
# Eine alternative Möglichkeit zum Ausgeben: 
WScript.Echo "Hier ist auch eine Möglichkeit"
# Wenn man ein "" innerhalb dem String ausgeben möchte, muss man doppelt "" eingeben, z.B.:
WScript.Echo "Hier ist auch eine Möglichkeit, ""Hello World "" auszugeben. "

# 2
# Prozeduren deklarieren
sub additionRechnen()
	a = 5 + b
	MsgBox "Das Ergebnis ist: " & a
end sub
# Hier muss man darauf achten: 
# sub liefert keinen Wert zurück. 
# Nur eine Funktion liefert einen Wert zurück.
# Wenn man ertwas innerhalb des Prozedurs ausgeben läßt, kann man einfach ein MsgBox in Sub schreiben. 
# Dazu entsprechender Code heißt "prozeduren.vbs"

# 3 
# Funktionen deklarieren
# Funktion liefert einen Wert zurück
# Aber man muss darauf aufpassen, der Wert hat den gleichen Namen von der Funktion!!!!
Function funktionName()
	funktionname = 5 + b
end Function
# Beispiel Code heißt funktion.vbs

# 4
# Funktion mit Parameter deklarieren
# Parameter heißt die benötigten Variablen in Funktiondeklaration
Function addition_zwei(a, b)
	addition_zwei = a + b
end Function
# a und b sind hier die Parameter von der Funktion addtion_zwei() in Deklaration. 

# Argument heißt die benötigten Variablen in Aufruf von der Funktion in Hauptprogramm
MsgBox "Das Ergebnis ist: " & addition_zwei(a,b)
# a und b sind hier die Argumente beim Aufrufen der Funktion addition_zwei()
# Dazuentsprechender Code heißt parameter.vbs

#5 
# Werteparameter Call by Value in VBScript
# Syntax ist: ByVal a
# Nur der Wert (Value) einer Variable wird an der Funktion oder dem Prozedur übergegeben,
# die Variable bleibt, und zwar der Wert der Variable ausserhalb der Funktion bleibt stehen. 
# Vorteil: 
# Verschiedene Funktionen können immer die gleiche Basis einer Variable bearbeiten. 
# Nachteil:
# Wenn man in verschiedene Stelle den Werte von der Variable ändern möchte, muss man manuell den Wert anpassen. 
Function quadrat(ByVal a)
	a = a^2
	quadrat = a
end Function

' Hauptprogramm:
dim x, ergebnis
x = 4
ergebnis = quadrat(x)
# Dazuentsprechender Code heißt werteParameter.vbs






